services:
  init:
    build:
      dockerfile: Dockerfile-init

    volumes:
      - shared-volume:/shared-volume
  graphdb:
    build:
      dockerfile: Dockerfile-graphdb
    ports:
      - "0:7200"
    volumes:
      - type: volume
        source: shared-volume
        target: /shared-volume-graphdb
        volume:
          subpath: graphdb-project/graphdb
      - type: volume
        source: shared-volume
        target: /shared-volume-python
        volume:
          subpath: graphdb-project/python

    container_name: "graphdb"
    networks:
      - graphdbnetwork
    depends_on:
      init:
        condition: service_completed_successfully

  python:
    build:
      dockerfile: Dockerfile-python
    volumes:
      - type: volume
        source: shared-volume
        target: /shared-volume-python
        volume:
          subpath: graphdb-project/python
      - type: volume
        source: shared-volume
        target: /shared-volume-graphdb
        volume:
          subpath: graphdb-project/graphdb
    healthcheck:
      test: [ "CMD-SHELL", "grep Started GraphDB in workbench mode at port 7200" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s

    container_name: "python"
    ports:
      - "0:8000"
    networks:
      - graphdbnetwork
    depends_on:
      - graphdb
    environment:
      PYTHONUNBUFFERED: 1
  mysql:
    image: docker.io/bitnami/mysql:8.4
    ports:
      - '0:3306'
    volumes:
      - type: volume
        source: shared-volume
        target: /bitnami/mysql/data
        volume:
          subpath: graphdb-project/mysql/data
      - type: volume
        source: shared-volume
        target: /docker-entrypoint-initdb.d
        volume:
          subpath: graphdb-project/mysql/init
      - type: volume
        source: shared-volume
        target: /docker-entrypoint-startdb.d
        volume:
          subpath: graphdb-project/mysql/start

    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_Database=database
    healthcheck:
      test: [ 'CMD', '/opt/bitnami/scripts/mysql/healthcheck.sh' ]
      interval: 15s
      timeout: 5s
      retries: 6
    networks:
      - graphdbnetwork
    depends_on:
      init:
        condition: service_completed_successfully
volumes:
  shared-volume:
    name: "shared-volume"
    external: true
  mysql:

networks:
  graphdbnetwork:
